From 4cf7444bd988c91b6b3548e68a330e3b6ffdb61d Mon Sep 17 00:00:00 2001
From: Cat73 <1901803382@qq.com>
Date: Tue, 12 Apr 2016 16:08:57 +0800
Subject: [PATCH] Cat73 -> Optimize TileEntity Ticking
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

将箱子、末影箱计算正在看箱子的人数、播放音效的代码移出 tickloop。
Link：https://github.com/PaperMC/Paper/blob/74a73b72237c0c6f27b692a37e2ec39dbd850337/Spigot-Server-Patches/0022-Optimize-TileEntity-Ticking.patch

diff --git a/src/main/java/net/minecraft/server/TileEntityChest.java b/src/main/java/net/minecraft/server/TileEntityChest.java
index 0b70d16..9037847 100644
--- a/src/main/java/net/minecraft/server/TileEntityChest.java
+++ b/src/main/java/net/minecraft/server/TileEntityChest.java
@@ -9,7 +9,7 @@ import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.entity.HumanEntity;
 // CraftBukkit end
 
-public class TileEntityChest extends TileEntityLootable implements ITickable, IInventory {
+public class TileEntityChest extends TileEntityLootable implements IInventory { // Paper - Remove ITickable
 
     private ItemStack[] items = new ItemStack[27];
     public boolean a;
@@ -237,6 +237,8 @@ public class TileEntityChest extends TileEntityLootable implements ITickable, II
     }
 
     public void c() {
+        // Paper - Disable all of this, just in case this does get ticked
+        /*
         this.m();
         int i = this.position.getX();
         int j = this.position.getY();
@@ -317,7 +319,7 @@ public class TileEntityChest extends TileEntityLootable implements ITickable, II
                 this.j = 0.0F;
             }
         }
-
+        */
     }
 
     public boolean c(int i, int j) {
@@ -338,6 +340,29 @@ public class TileEntityChest extends TileEntityLootable implements ITickable, II
 
             ++this.l;
             if (this.world == null) return; // CraftBukkit
+            
+            // Paper start - Move chest open sound out of the tick loop
+            this.m();
+
+            if (this.l > 0 && this.j == 0.0F && this.f == null && this.h == null) {
+                this.j = 0.7F;
+
+                double d0 = (double) this.position.getZ() + 0.5D;
+                double d1 = (double) this.position.getX() + 0.5D;
+                int yLoc = this.position.getY();
+
+                if (this.i != null) {
+                    d0 += 0.5D;
+                }
+
+                if (this.g != null) {
+                    d1 += 0.5D;
+                }
+
+                this.world.a((EntityHuman) null, d1, (double) yLoc + 0.5D, d0, SoundEffects.X, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+            }
+            // Paper end
+
             this.world.playBlockAction(this.position, this.getBlock(), 1, this.l);
 
             // CraftBukkit start - Call redstone event
@@ -360,6 +385,34 @@ public class TileEntityChest extends TileEntityLootable implements ITickable, II
             int oldPower = Math.max(0, Math.min(15, this.l)); // CraftBukkit - Get power before new viewer is added
             --this.l;
             if (this.world == null) return; // CraftBukkit
+
+            // Paper start - Move chest close sound out of the tick loop
+            if (this.l == 0 && this.j > 0.0F || this.l > 0 && this.j < 1.0F) {
+                float f = 0.1F;
+
+                if (this.l > 0) {
+                    this.j += f;
+                } else {
+                    this.j -= f;
+                }
+
+                double d0 = (double) this.getPosition().getX() + 0.5D;
+                double d2 = (double) this.getPosition().getZ() + 0.5D;
+                int yLoc = this.position.getY();
+
+                if (this.i != null) {
+                    d2 += 0.5D;
+                }
+
+                if (this.g != null) {
+                    d0 += 0.5D;
+                }
+
+                this.world.a((EntityHuman) null, d0, (double) yLoc + 0.5D, d2, SoundEffects.V, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+                this.j = 0.0F;
+            }
+            // Paper end
+            
             this.world.playBlockAction(this.position, this.getBlock(), 1, this.l);
 
             // CraftBukkit start - Call redstone event
diff --git a/src/main/java/net/minecraft/server/TileEntityEnderChest.java b/src/main/java/net/minecraft/server/TileEntityEnderChest.java
index eca71c0..8d91b6b 100644
--- a/src/main/java/net/minecraft/server/TileEntityEnderChest.java
+++ b/src/main/java/net/minecraft/server/TileEntityEnderChest.java
@@ -1,6 +1,6 @@
 package net.minecraft.server;
 
-public class TileEntityEnderChest extends TileEntity implements ITickable {
+public class TileEntityEnderChest extends TileEntity { // Paper - Remove ITickable
 
     public float a;
     public float f;
@@ -10,6 +10,8 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
     public TileEntityEnderChest() {}
 
     public void c() {
+        // Paper start - Disable all of this, just in case this does get ticked
+        /*
         if (++this.h % 20 * 4 == 0) {
             this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.g);
         }
@@ -54,7 +56,7 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
                 this.a = 0.0F;
             }
         }
-
+        */
     }
 
     public boolean c(int i, int j) {
@@ -73,11 +75,34 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
 
     public void d() {
         ++this.g;
+
+        // Paper start - Move enderchest open sounds out of the tick loop
+        if (this.g > 0 && this.a == 0.0F) {
+            this.a = 0.7F;
+
+            double d1 = (double) this.getPosition().getX() + 0.5D;
+            double d0 = (double) this.getPosition().getZ() + 0.5D;
+
+            this.world.a((EntityHuman) null, d1, (double) this.getPosition().getY() + 0.5D, d0, SoundEffects.aM, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+        }
+        // Paper end
+
         this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.g);
     }
 
     public void e() {
         --this.g;
+
+        // Paper start - Move enderchest close sounds out of the tick loop
+        if (this.g == 0 && this.a > 0.0F || this.g > 0 && this.a < 1.0F) {
+            double d0 = (double) this.getPosition().getX() + 0.5D;
+            double d2 = (double) this.getPosition().getZ() + 0.5D;
+
+            this.world.a((EntityHuman) null, d0, (double) this.getPosition().getY() + 0.5D, d2, SoundEffects.aL, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+            this.a = 0.0F;
+        }
+        // Paper end
+
         this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.g);
     }
 
-- 
2.8.2.windows.1

