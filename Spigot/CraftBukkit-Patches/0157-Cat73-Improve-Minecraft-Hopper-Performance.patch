From a7b7b1ef786565e8ffcc9557183a9c30d5432ba8 Mon Sep 17 00:00:00 2001
From: Cat73 <1901803382@qq.com>
Date: Wed, 15 Jun 2016 20:45:33 +0800
Subject: [PATCH] Cat73 -> Improve-Minecraft-Hopper-Performance
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

在漏斗传输物品的时候不再调用目标容器的 update 方法
简单看了看似乎这个 update 在传输物品的时候并没有什么卵用。。。
1. 更新方块的损害值。
2. 更新 Chunk 里是否有过方块更新的标记为 true。
   然而只有很低的概率影响 MC 每隔一段时间的自动保存，卸载 Chunk 时一定会保存。
   AutoSaveWorld 也是无视这个值直接保存的，服务器崩溃时 AutoSaveWorld 会先保存一次再关闭服务器。
   而且服务器当前已经在 bukkit.yml 里禁用了这种自动保存。。。
3. 进行 Physics 计算。
Link: https://github.com/PaperMC/Paper/blob/c8643cef2eb0fe2c315b950728441791a397b0c0/Spigot-Server-Patches/0142-Improve-Minecraft-Hopper-Performance.patch

diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index 42f37df..595f4a0 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -20,6 +20,7 @@ public abstract class TileEntity {
     protected boolean d;
     private int h;
     protected Block e;
+    protected static boolean IGNORE_TILE_UPDATES = false; // paper
 
     public TileEntity() {
         this.position = BlockPosition.ZERO;
@@ -112,6 +113,7 @@ public abstract class TileEntity {
 
     public void update() {
         if (this.world != null) {
+            if (IGNORE_TILE_UPDATES) return; // Paper
             IBlockData iblockdata = this.world.getType(this.position);
 
             this.h = iblockdata.getBlock().toLegacyData(iblockdata);
diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index d1ce2b9..9d1fd0c 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -499,7 +499,9 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
             boolean flag = false;
 
             if (itemstack1 == null) {
+                IGNORE_TILE_UPDATES = true; // Paper
                 iinventory.setItem(i, itemstack);
+                IGNORE_TILE_UPDATES = false; // Paper
                 itemstack = null;
                 flag = true;
             } else if (a(itemstack1, itemstack)) {
@@ -519,7 +521,7 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                         tileentityhopper.setCooldown(tileentityhopper.world.spigotConfig.hopperTransfer); // Spigot
                     }
 
-                    iinventory.update();
+                    // iinventory.update();
                 }
 
                 iinventory.update();
-- 
2.9.0.windows.1

