From b1e01dc7f0a7a75a8ab9406ae7ce654ac4c8ec80 Mon Sep 17 00:00:00 2001
From: Cat73 <cat7373x@gmail.com>
Date: Sat, 30 Jun 2018 11:06:44 +0800
Subject: [PATCH] Cat73 -> Do not mark chunks as active for neighbor updates
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

不要在更新临近方块时加载区块
Link: https://github.com/PaperMC/Paper/blob/f0cb089a24d6c62f986e6635975f80b96c517e92/Spigot-Server-Patches/0127-Do-not-mark-chunks-as-active-for-neighbor-updates.patch

diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 271a5d6a..1d19ccb5 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -987,25 +987,25 @@ public class Chunk {
         }
         // CraftBukkit end
 
-        Chunk chunk = ichunkprovider.getLoadedChunkAt(this.locX, this.locZ - 1);
-        Chunk chunk1 = ichunkprovider.getLoadedChunkAt(this.locX + 1, this.locZ);
-        Chunk chunk2 = ichunkprovider.getLoadedChunkAt(this.locX, this.locZ + 1);
-        Chunk chunk3 = ichunkprovider.getLoadedChunkAt(this.locX - 1, this.locZ);
+        Chunk chunk = getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX, this.locZ - 1); // Paper
+        Chunk chunk1 = getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX + 1, this.locZ); // Paper
+        Chunk chunk2 = getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX, this.locZ + 1); // Paper
+        Chunk chunk3 = getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX - 1, this.locZ); // Paper
 
-        if (chunk1 != null && chunk2 != null && ichunkprovider.getLoadedChunkAt(this.locX + 1, this.locZ + 1) != null) {
+        if (chunk1 != null && chunk2 != null && getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX + 1, this.locZ + 1) != null) { // Paper
             this.a(chunkgenerator);
         }
 
-        if (chunk3 != null && chunk2 != null && ichunkprovider.getLoadedChunkAt(this.locX - 1, this.locZ + 1) != null) {
+        if (chunk3 != null && chunk2 != null && getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX - 1, this.locZ + 1) != null) { // Paper
             chunk3.a(chunkgenerator);
         }
 
-        if (chunk != null && chunk1 != null && ichunkprovider.getLoadedChunkAt(this.locX + 1, this.locZ - 1) != null) {
+        if (chunk != null && chunk1 != null && getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX + 1, this.locZ - 1) != null) { // Paper
             chunk.a(chunkgenerator);
         }
 
         if (chunk != null && chunk3 != null) {
-            Chunk chunk4 = ichunkprovider.getLoadedChunkAt(this.locX - 1, this.locZ - 1);
+            Chunk chunk4 = getLoadedChunkWithoutMarkingActive(ichunkprovider, this.locX - 1, this.locZ - 1); // Paper
 
             if (chunk4 != null) {
                 chunk4.a(chunkgenerator);
@@ -1015,6 +1015,20 @@ public class Chunk {
 
     }
 
+    // Paper start
+    /**
+     * Gets a chunk without changing its boolean for should unload
+     * @param provider
+     * @param x
+     * @param z
+     * @return
+     */
+    @Nullable
+    public static Chunk getLoadedChunkWithoutMarkingActive(IChunkProvider provider, int x, int z) {
+        return ((ChunkProviderServer) provider).chunks.get(ChunkCoordIntPair.a(x, z));
+    }
+    // Paper end
+
     protected void a(ChunkGenerator chunkgenerator) {
         if (this.isDone()) {
             if (chunkgenerator.a(this, this.locX, this.locZ)) {
-- 
2.15.2 (Apple Git-101.1)

