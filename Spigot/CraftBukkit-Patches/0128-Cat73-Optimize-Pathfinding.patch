From 5267e7e1378e45a48a25d686583ad62a2da78afd Mon Sep 17 00:00:00 2001
From: Cat73 <root@cat73.org>
Date: Sat, 6 Oct 2018 21:35:35 +0800
Subject: [PATCH] Cat73 -> Optimize Pathfinding
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

给多次寻路失败的实体增加寻路 CD
当一个实体连续寻路失败超过 10 次时，后面的寻路截流到 40tick 一次
Link: https://github.com/PaperMC/Paper/blob/468a1cbbd78384f2c728ef93d5f796d8b9891a7e/Spigot-Server-Patches/0046-Optimize-Pathfinding.patch

diff --git a/src/main/java/net/minecraft/server/NavigationAbstract.java b/src/main/java/net/minecraft/server/NavigationAbstract.java
index 2d788ef6..60b5068e 100644
--- a/src/main/java/net/minecraft/server/NavigationAbstract.java
+++ b/src/main/java/net/minecraft/server/NavigationAbstract.java
@@ -122,10 +122,26 @@ public abstract class NavigationAbstract {
     }
 
     public boolean a(Entity entity, double d0) {
+        // Paper start - Pathfinding optimizations
+        if (this.pathfindFailures > 10 && this.c == null && MinecraftServer.currentTick < this.lastFailure + 40) {
+            return false;
+        }
+
         PathEntity pathentity = this.a(entity);
 
-        return pathentity != null && this.a(pathentity, d0);
+        if (pathentity != null && this.a(pathentity, d0)) {
+            this.lastFailure = 0;
+            this.pathfindFailures = 0;
+            return true;
+        } else {
+            this.pathfindFailures++;
+            this.lastFailure = MinecraftServer.currentTick;
+            return false;
+        }
     }
+    private int lastFailure = 0;
+    private int pathfindFailures = 0;
+    // Paper end
 
     public boolean a(@Nullable PathEntity pathentity, double d0) {
         if (pathentity == null) {
@@ -258,6 +274,7 @@ public abstract class NavigationAbstract {
     }
 
     public void q() {
+        this.pathfindFailures = 0; this.lastFailure = 0; // Paper - Pathfinding optimizations
         this.c = null;
     }
 
-- 
2.21.0

