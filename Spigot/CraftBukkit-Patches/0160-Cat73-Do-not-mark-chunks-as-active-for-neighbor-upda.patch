From a1ecb303ed687fd3cb4886ac57184b10b2634403 Mon Sep 17 00:00:00 2001
From: Cat73 <1901803382@qq.com>
Date: Sat, 21 May 2016 18:40:03 +0800
Subject: [PATCH] Cat73 -> Do-not-mark-chunks-as-active-for-neighbor-updates
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

修复 Chunk 泄漏的问题，具体改动我也没研究，建议看下面的 Link
Link: https://github.com/PaperMC/Paper/blob/e56bbcdcda3c65ad594cce156d1506e30940dc02/Spigot-Server-Patches/0152-Do-not-mark-chunks-as-active-for-neighbor-updates.patch

diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index bf971bb..e4bd50d 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -55,6 +55,28 @@ public class Chunk {
     private final int[] itemCounts = new int[16];
     private final int[] inventoryEntityCounts = new int[16];
 
+    /**
+     * Gets a chunk without changing its boolean for should unload
+     * @param world
+     * @param x
+     * @param z
+     * @return
+     */
+    @Nullable public static Chunk getLoadedChunkWithoutMarkingActive(World world, int x, int z) {
+        return ((ChunkProviderServer) world.chunkProvider).chunks.get(ChunkCoordIntPair.a(x, z));
+    }
+
+    /**
+     * Gets a chunk without changing its boolean for should unload
+     * @param provider
+     * @param x
+     * @param z
+     * @return
+     */
+    @Nullable public static Chunk getLoadedChunkWithoutMarkingActive(IChunkProvider provider, int x, int z) {
+        return ((ChunkProviderServer)provider).chunks.get(ChunkCoordIntPair.a(x, z));
+    }
+    
     public boolean areNeighborsLoaded(final int radius) {
         switch (radius) {
             case 2:
@@ -945,25 +967,25 @@ public class Chunk {
 
     public void loadNearby(IChunkProvider ichunkprovider, ChunkGenerator chunkgenerator) {
         world.timings.syncChunkLoadPostTimer.startTiming(); // Spigot
-        Chunk chunk = ichunkprovider.getLoadedChunkAt(this.locX, this.locZ - 1);
-        Chunk chunk1 = ichunkprovider.getLoadedChunkAt(this.locX + 1, this.locZ);
-        Chunk chunk2 = ichunkprovider.getLoadedChunkAt(this.locX, this.locZ + 1);
-        Chunk chunk3 = ichunkprovider.getLoadedChunkAt(this.locX - 1, this.locZ);
+        Chunk chunk = Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX, this.locZ - 1); // Paper
+        Chunk chunk1 = Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX + 1, this.locZ); // Paper
+        Chunk chunk2 = Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX, this.locZ + 1); // Paper
+        Chunk chunk3 = Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX - 1, this.locZ); // Paper
 
-        if (chunk1 != null && chunk2 != null && ichunkprovider.getLoadedChunkAt(this.locX + 1, this.locZ + 1) != null) {
+        if (chunk1 != null && chunk2 != null && Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX + 1, this.locZ + 1) != null) { // Paper
             this.a(chunkgenerator);
         }
 
-        if (chunk3 != null && chunk2 != null && ichunkprovider.getLoadedChunkAt(this.locX - 1, this.locZ + 1) != null) {
+        if (chunk3 != null && chunk2 != null && Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX - 1, this.locZ + 1) != null) { // Paper
             chunk3.a(chunkgenerator);
         }
 
-        if (chunk != null && chunk1 != null && ichunkprovider.getLoadedChunkAt(this.locX + 1, this.locZ - 1) != null) {
+        if (chunk != null && chunk1 != null && Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX + 1, this.locZ - 1) != null) { // Paper
             chunk.a(chunkgenerator);
         }
 
         if (chunk != null && chunk3 != null) {
-            Chunk chunk4 = ichunkprovider.getLoadedChunkAt(this.locX - 1, this.locZ - 1);
+            Chunk chunk4 = Chunk.getLoadedChunkWithoutMarkingActive(ichunkprovider,this.locX - 1, this.locZ - 1); // Paper
 
             if (chunk4 != null) {
                 chunk4.a(chunkgenerator);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index afbdb5c..5d92092 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -302,7 +302,7 @@ public class CraftWorld implements World {
                         continue;
                     }
 
-                    net.minecraft.server.Chunk neighbor = world.getChunkProviderServer().getLoadedChunkAt(chunk.locX + x, chunk.locZ + z);
+                    net.minecraft.server.Chunk neighbor = net.minecraft.server.Chunk.getLoadedChunkWithoutMarkingActive(world, chunk.locX + x, chunk.locZ + z); // Paper
                     if (neighbor != null) {
                         neighbor.setNeighborLoaded(-x, -z);
                         chunk.setNeighborLoaded(x, z);
diff --git a/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java b/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java
index 7b61b14..2de3b10 100644
--- a/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java
+++ b/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOProvider.java
@@ -62,7 +62,7 @@ class ChunkIOProvider implements AsynchronousExecutor.CallBackProvider<QueuedChu
                     continue;
                 }
 
-                Chunk neighbor = queuedChunk.provider.getLoadedChunkAt(chunk.locX + x, chunk.locZ + z);
+                Chunk neighbor = Chunk.getLoadedChunkWithoutMarkingActive(queuedChunk.provider, chunk.locX + x, chunk.locZ + z); // Paper
                 if (neighbor != null) {
                     neighbor.setNeighborLoaded(-x, -z);
                     chunk.setNeighborLoaded(x, z);
-- 
2.8.2.windows.1

