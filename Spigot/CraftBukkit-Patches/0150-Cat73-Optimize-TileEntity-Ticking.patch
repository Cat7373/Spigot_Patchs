From 8846e3c3172b069439ac2f4038ed41769d54bf56 Mon Sep 17 00:00:00 2001
From: Cat73 <cat73@cat73.org>
Date: Sun, 25 Jun 2017 14:16:27 +0800
Subject: [PATCH] Cat73 -> Optimize TileEntity Ticking
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

将箱子、末影箱计算正在看箱子的人数、播放音效的代码移出 tickloop。
Link: https://github.com/PaperMC/Paper/blob/ebf1094ea5dea6f3c8ad0ed5a1344089cb7ecfc7/Spigot-Server-Patches/0020-Optimize-TileEntity-Ticking.patch

diff --git a/src/main/java/net/minecraft/server/TileEntityChest.java b/src/main/java/net/minecraft/server/TileEntityChest.java
index af8c2cfa..ed0e43fe 100644
--- a/src/main/java/net/minecraft/server/TileEntityChest.java
+++ b/src/main/java/net/minecraft/server/TileEntityChest.java
@@ -8,7 +8,7 @@ import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.entity.HumanEntity;
 // CraftBukkit end
 
-public class TileEntityChest extends TileEntityLootable implements ITickable {
+public class TileEntityChest extends TileEntityLootable {
 
     private NonNullList<ItemStack> items;
     public boolean a;
@@ -190,6 +190,7 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
     }
 
     public void e() {
+        /*
         this.o();
         int i = this.position.getX();
         int j = this.position.getY();
@@ -270,7 +271,7 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
                 this.j = 0.0F;
             }
         }
-
+        */
     }
 
     public boolean c(int i, int j) {
@@ -290,6 +291,28 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
             int oldPower = Math.max(0, Math.min(15, this.l)); // CraftBukkit - Get power before new viewer is added
 
             ++this.l;
+
+            // Paper start - Move chest open sound out of the tick loop
+            this.o();
+
+            if (this.l > 0 && this.j == 0.0F && this.f == null && this.h == null) {
+                this.j = 0.7F;
+
+                double d0 = (double) this.position.getZ() + 0.5D;
+                double d1 = (double) this.position.getX() + 0.5D;
+
+                if (this.i != null) {
+                    d0 += 0.5D;
+                }
+
+                if (this.g != null) {
+                    d1 += 0.5D;
+                }
+
+                this.world.a((EntityHuman) null, d1, (double) this.position.getY() + 0.5D, d0, SoundEffects.ac, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+            }
+            // Paper end
+
             if (this.world == null) return; // CraftBukkit
             this.world.playBlockAction(this.position, this.getBlock(), 1, this.l);
 
@@ -314,6 +337,34 @@ public class TileEntityChest extends TileEntityLootable implements ITickable {
         if (!entityhuman.isSpectator() && this.getBlock() instanceof BlockChest) {
             int oldPower = Math.max(0, Math.min(15, this.l)); // CraftBukkit - Get power before new viewer is added
             --this.l;
+
+            // Paper start - Move chest close sound out of the tick loop
+            if (this.l == 0 && this.j > 0.0F || this.l > 0 && this.j < 1.0F) {
+                float f = 0.1F;
+
+                if (this.l > 0) {
+                    this.j += f;
+                } else {
+                    this.j -= f;
+                }
+
+                double d0 = (double) this.getPosition().getX() + 0.5D;
+                double d2 = (double) this.getPosition().getZ() + 0.5D;
+                int yLoc = this.position.getY();
+
+                if (this.i != null) {
+                    d2 += 0.5D;
+                }
+
+                if (this.g != null) {
+                    d0 += 0.5D;
+                }
+
+                this.world.a((EntityHuman) null, d0, (double) yLoc + 0.5D, d2, SoundEffects.aa, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+                this.j = 0.0F;
+            }
+            // Paper end
+
             this.world.playBlockAction(this.position, this.getBlock(), 1, this.l);
             this.world.applyPhysics(this.position, this.getBlock(), false);
 
diff --git a/src/main/java/net/minecraft/server/TileEntityEnderChest.java b/src/main/java/net/minecraft/server/TileEntityEnderChest.java
index 31585757..9c5f2d5b 100644
--- a/src/main/java/net/minecraft/server/TileEntityEnderChest.java
+++ b/src/main/java/net/minecraft/server/TileEntityEnderChest.java
@@ -1,6 +1,6 @@
 package net.minecraft.server;
 
-public class TileEntityEnderChest extends TileEntity implements ITickable {
+public class TileEntityEnderChest extends TileEntity {
 
     public float a;
     public float f;
@@ -10,6 +10,7 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
     public TileEntityEnderChest() {}
 
     public void e() {
+        /*
         if (++this.h % 20 * 4 == 0) {
             this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.g);
         }
@@ -54,7 +55,7 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
                 this.a = 0.0F;
             }
         }
-
+        */
     }
 
     public boolean c(int i, int j) {
@@ -73,11 +74,34 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
 
     public void a() {
         ++this.g;
+
+        // Paper start - Move enderchest open sounds out of the tick loop
+        if (this.g > 0 && this.a == 0.0F) {
+            this.a = 0.7F;
+
+            double d1 = (double) this.getPosition().getX() + 0.5D;
+            double d0 = (double) this.getPosition().getZ() + 0.5D;
+
+            this.world.a((EntityHuman) null, d1, (double) this.getPosition().getY() + 0.5D, d0, SoundEffects.aT, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+        }
+        // Paper end
+
         this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.g);
     }
 
     public void f() {
         --this.g;
+
+        // Paper start - Move enderchest close sounds out of the tick loop
+        if (this.g == 0 && this.a > 0.0F || this.g > 0 && this.a < 1.0F) {
+            double d0 = (double) this.getPosition().getX() + 0.5D;
+            double d2 = (double) this.getPosition().getZ() + 0.5D;
+
+            this.world.a((EntityHuman) null, d0, (double) this.getPosition().getY() + 0.5D, d2, SoundEffects.aS, SoundCategory.BLOCKS, 0.5F, this.world.random.nextFloat() * 0.1F + 0.9F);
+            this.a = 0.0F;
+        }
+        // Paper end
+
         this.world.playBlockAction(this.position, Blocks.ENDER_CHEST, 1, this.g);
     }
 
-- 
2.13.0

